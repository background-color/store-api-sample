openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8080'
paths:
  /api/register:
    post:
      summary: 'POST ユーザー登録'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User registration completed'
                  data:
                    id: 15
                    name: 山田花子
                    email: user1@example.com
                properties:
                  message:
                    type: string
                    example: 'User registration completed'
                  data:
                    type: object
                    example:
                      id: 15
                      name: 山田花子
                      email: user1@example.com
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 名前
                  example: 山田花子
                email:
                  type: string
                  description: メールアドレス
                  example: user1@example.com
                password:
                  type: string
                  description: パスワード
                  example: password
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: 'POST ログイン'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"message\": \"Success\",\n    \"data\": {\n        \"access_token\": \"xxxxxxxxxxxxxxxxxxxx\",\n        \"token_type\": \"Bearer\",\n    }\n}"
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: メールアドレス
                  example: user1@example.com
                password:
                  type: string
                  description: パスワード
                  example: password
              required:
                - email
                - password
      security: []
  /api/items:
    get:
      summary: 'GET 商品一覧を返すAPI'
      description: ''
      parameters:
        -
          in: query
          name: is_sale
          description: 1=販売商品のみ表示
          example: 1
          required: false
          schema:
            type: integer
            description: 1=販売商品のみ表示
            example: 1
        -
          in: query
          name: per_page
          description: 1ページの表示件数
          example: 10
          required: false
          schema:
            type: integer
            description: 1ページの表示件数
            example: 10
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"登山靴\",\n            \"point\": 100,\n            \"description\": \"テキストテキスト\",\n            \"user_id\": 1,   // 登録者ID\n            \"status\": \"sale\"  // ステータス\n        }\n    ]\n}"
      tags:
        - Item
      security: []
    post:
      summary: 'POST 商品を登録するAPI'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"message\": \"Your item has been successfully created.\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"登山靴\",\n        \"point\": 1000,\n        \"description\": \"防水加工です\",\n        \"user_id\": 1,  // 登録者ID\n        \"status\": \"sale\"  // ステータス\n    }\n}"
      tags:
        - Item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 商品名
                  example: 登山靴
                point:
                  type: integer
                  description: 価格（ポイント）
                  example: 1000
                description:
                  type: string
                  description: 説明文
                  example: 防水加工です
              required:
                - name
                - point
  '/api/items/{id}':
    get:
      summary: 'GET 指定の商品を返すAPI'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": {\n            \"id\": 1,\n            \"name\": \"登山靴\",\n            \"point\": 100,\n            \"description\": \"テキストテキスト\",\n            \"user_id\": 1,   // 登録者ID\n            \"status\": \"sale\"  // ステータス\n        }\n}"
      tags:
        - Item
      security: []
    put:
      summary: 'PUT 商品を更新するAPI'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"message\": \"Your item has been successfully updated.\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"シェラカップ\",\n        \"point\": 800,\n        \"description\": \"ステンレスです\",\n        \"user_id\": 1,  // 登録者ID\n        \"status\": \"sale\"  // ステータス\n    }\n}"
      tags:
        - Item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 商品名
                  example: シェラカップ
                point:
                  type: integer
                  description: 価格（ポイント）
                  example: 800
                description:
                  type: string
                  description: 説明文
                  example: ステンレスです
              required:
                - name
                - point
    delete:
      summary: 'DELETE 商品を削除するAPI'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"message\": \"Your item has been successfully deleted.\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"シェラカップ\",\n        \"point\": 800,\n        \"description\": \"ステンレスです\",\n        \"user_id\": 1,  // 登録者ID\n        \"status\": \"sale\"  // ステータス\n    }\n}"
      tags:
        - Item
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. 商品のID'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/orders:
    post:
      summary: 'POST 商品を購入するAPI'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your order has been completed.'
                  data:
                    item:
                      id: 1
                      name: 登山靴
                      point: 100
                      description: テキストテキスト
                      user_id: 1
                      status: 'sold out'
                    seller:
                      id: 1
                      name: 山田花子
                    buyer:
                      id: 2
                      name: 鈴木太郎
                    accepted_at: '2022-06-25 17:22:57'
                properties:
                  message:
                    type: string
                    example: 'Your order has been completed.'
                  data:
                    type: object
                    example:
                      item:
                        id: 1
                        name: 登山靴
                        point: 100
                        description: テキストテキスト
                        user_id: 1
                        status: 'sold out'
                      seller:
                        id: 1
                        name: 山田花子
                      buyer:
                        id: 2
                        name: 鈴木太郎
                      accepted_at: '2022-06-25 17:22:57'
      tags:
        - Order
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: integer
                  description: 購入する商品のID
                  example: 3
    get:
      summary: 'GET 自分の売買履歴を返すAPI'
      description: ''
      parameters:
        -
          in: query
          name: per_page
          description: 1ページの表示件数
          example: 10
          required: false
          schema:
            type: integer
            description: 1ページの表示件数
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 39
                      item:
                        id: 18
                        name: テスト商品
                        point: 111
                        description: 詳細文言
                        user_id: 1
                        status: 'sold out'
                      seller:
                        id: 1
                        name: 山田花子
                      buyer:
                        id: 15
                        name: 佐藤次郎
                      accepted_at: '2022-06-25 17:22:57'
                  links:
                    first: 'http://localhost:8080/api/orders?page=1'
                    last: 'http://localhost:8080/api/orders?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost:8080/api/orders?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost:8080/api/orders'
                    per_page: 10
                    to: 1
                    total: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 39
                        item:
                          id: 18
                          name: テスト商品
                          point: 111
                          description: 詳細文言
                          user_id: 1
                          status: 'sold out'
                        seller:
                          id: 1
                          name: 山田花子
                        buyer:
                          id: 15
                          name: 佐藤次郎
                        accepted_at: '2022-06-25 17:22:57'
                    items:
                      type: object
                  links:
                    type: object
                    example:
                      first: 'http://localhost:8080/api/orders?page=1'
                      last: 'http://localhost:8080/api/orders?page=1'
                      prev: null
                      next: null
                  meta:
                    type: object
                    example:
                      current_page: 1
                      from: 1
                      last_page: 1
                      links:
                        -
                          url: null
                          label: '&laquo; Previous'
                          active: false
                        -
                          url: 'http://localhost:8080/api/orders?page=1'
                          label: '1'
                          active: true
                        -
                          url: null
                          label: 'Next &raquo;'
                          active: false
                      path: 'http://localhost:8080/api/orders'
                      per_page: 10
                      to: 1
                      total: 1
      tags:
        - Order
tags:
  -
    name: Auth
    description: ''
  -
    name: Item
    description: ''
  -
    name: Order
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
